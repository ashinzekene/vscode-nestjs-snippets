{
  "Nest Controller": {
    "prefix": "n-controller",
    "description": "NestJS Controller",
    "body": [
      "import { Controller, Get } from '@nestjs/common';",
      "",
      "@Controller('${1}')",
      "export class ${2}Controller {",
      "\tconstructor(){}",
      "",
      "\t@Get() {",
      "\t\t${0}",
      "\t}",
      "}"
    ]
  },
  "Nest v4 Middlware": {
    "prefix": "n-v4-middleware",
    "description": "NestJS Middleware Version 4",
    "body": [
      "import { Middleware, NestMiddleware, ExpressMiddleware } from '@nestjs/common';",
      "",
      "@Middleware()",
      "export class ${1}Middleware implements NestMiddleware {",
      "\tresolve(...args: any[]): ExpressMiddleware {",
      "\t\treturn (req, res, next) => {",
      "\t\t\t${0}",
      "\t\t\tnext();",
      "\t\t};",
      "\t}",
      "}"
    ]
  },
  "Nest v4 Module": {
    "prefix": "n-v4-module",
    "description": "NestJS Module v4",
    "body": [
      "import { Module } from '@nestjs/common';",
      "import { ${1}Controller } from './${2}.controller';",
      "import { ${1}Service } from './${2}.service';",
      "",
      "@Module({",
      "\tcontrollers: [${1}Controller],",
      "\tcomponents:[${1}Service],",
      "})",
      "export class ${1}Module {${0}};"
    ]
  },
  "Nest Root Module": {
    "prefix": "n-module-root",
    "description": "NestJS Root Module",
    "body": [
      "import { Module } from '@nestjs/common';",
      "import { ${1}Module } from './${2}.module';",
      "",
      "@Module({",
      "\tmodules: [${1}Module],",
      "})",
      "export class ${3:Application}Module {${0}};"
    ]
  },
  "Nest NestModule": {
    "prefix": "n-module-nest",
    "description": "NestJS Module Implementing NestModule",
    "body": [
      "import { Module, NestModule } from '@nestjs/common';",
      "import { ${1}Module } from './${2}.module';",
      "",
      "@Module({",
      "\tmodules: [${1}Module],",
      "})",
      "export class ${3:Application}Module {",
      "\tconfigure() {",
      "\t\t${0}",
      "\t}",
      "}"
    ]
  },
  "Nest Mongoose Service": {
    "prefix": "n-mongoose-service",
    "description": "NestJS Service for Mongoose",
    "body": [
      "import { Model } from 'mongoose';",
      "import { Injectable, Inject } from '@nestjs/common';",
      "import { InjectModel } from '@nestjs/mongoose';",
      "",
      "import { Create${1:User}Dto } from './dto/create-${2:user}.dto';",
      "import { ${1:User} } from './interfaces/${2:user}s.interface';",
      "import { ${1:User}Schema } from './schemas/${2:user}s.schema';",
      "",
      "@Injectable()",
      "export class UsersService {",
      "\tconstructor(@InjectModel(${1:User}Schema) private readonly ${2:user}Model: Model<${1:User}>) {}",
      "\tasync findAll () {",
      "\t\treturn await this.${2:user}Model.find().exec()",
      "\t}",
      "}"
    ]
  },
  "Nest Mongoose Interface": {
    "prefix": "n-mongoose-interface",
    "description": "NestJS Interface for mongoose",
    "body": [
      "import { Document } from 'mongoose';",
      "",
      "export interface ${1:User} extends Document {",
      "\treadonly ${2:name}: string;",
      "}"
    ]
  },
  "Nest Unit Test": {
    "prefix": "n-test",
    "description": "NestJS Unit Test",
    "body": [
      "import { Test } from '@nestjs/testing';",
      "import { ${1}Controller } from './${2}.controller';",
      "import { ${1}Service } from './${2}.service';",
      "",
      "describe('${1}Controller', () => {",
      "\tlet ${2}Controller: ${1}Controller;",
      "\tlet ${2}Service: ${1}Service;",
      "",
      "\tbeforeEach(async () => {",
      "\t\tconst module = await Test.createTestingModule({",
      "\t\t\tcontrollers: [${1}Controller],",
      "\t\t\tproviders: [${1}Service],",
      "\t\t}).compile();",
      "",
      "\t\t${2}Service = module.get<${1}Service>(${1}Service);",
      "\t\t${2}Controller = module.get<${1}Controller>(${1}Controller);",
      "\t});",
      "",
      "\tdescribe('findAll', () => {",
      "\t\tit('should return an array of users', async () => {",
      "\t\t\tconst result = ['test'];",
      "\t\t\tjest.spyOn(${2}Service, 'findAll').mockImplementation(() => result);",
      "\t\t\t${0}",
      "\t\t\texpect(await ${2}Controller.findAll()).toBe(result);",
      "\t\t});",
      "\t});",
      "});"
    ]
  },
   "Nest Service Unit Test": {
    "prefix": "n-test-service",
    "description": "NestJS Service Unit Test",
    "body": [
      "import { Test } from '@nestjs/testing';",
      "import { ${1}Service } from './${2}.service';",
      "",
      "describe('${1} Test suite', () => {",
      "\tlet ${2}Service: ${1}Service;",
      "",
      "\tbeforeEach(async () => {",
      "\t\tconst module = await Test.createTestingModule({",
      "\t\t\tproviders: [${1}Service],",
      "\t\t}).compile();",
      "",
      "\t\t${2}Service = module.get<${1}Service>(${1}Service);",
      "\t});",
      "",
      "\tit('should be defined', () => {",
        "\t\texpect(${2}Service).toBeDefined();",
      "\t});",
      "});"
    ]
  },
  "Nest Sequelize Entity": {
    "prefix": "n-sequelize-entity",
    "description": "NestJS Sequelize Entity",
    "body": [
      "import { Table, Column, Model } from 'sequelize-typescript';",
      "",
      "@Table",
      "export class ${1} extends Model<${1}> {",
      "\t@Column",
      "\tname: string;",
      "",
      "\t@Column",
      "\t${0};",
      "}"
    ]
  },
  "Nest Sequelize Provider": {
    "prefix": "n-sequelize-provider",
    "description": "NestJS Sequelize Provider",
    "body": [
      "import { ${1} } from './${2}.entity';",
      "",
      "export const ${2}Providers = [",
      "\t{",
      "\t\tprovide: '${1}Repository',",
      "\t\tuseValue: ${1},",
      "\t},",
      "];"
    ]
  },
  "Nest Sequelize Database Provider": {
    "prefix": "n-sequelize-database-provider",
    "description": "NestJS Sequelize Provider",
    "body": [
      "import { Sequelize } from 'sequelize-typescript';",
      "import { ${1} } from '../${2}s/${2}.entity';",
      "",
      "export const databaseProviders = [",
      "\t{",
      "\t\tprovide: 'SequelizeToken',",
      "\t\tuseFactory: async () => {",
      "\t\t\tconst sequelize = new Sequelize({",
      "\t\t\t\tdialect: '${3:mysql}',",
      "\t\t\t\thost: '${4:localhost}',",
      "\t\t\t\tport: ${5:3306},",
      "\t\t\t\tusername: '${6:root}',",
      "\t\t\t\tpassword: '${7}',",
      "\t\t\t\tdatabase: '${0}',",
      "\t\t\t});",
      "\t\t\tsequelize.addModels([${1}]);",
      "\t\t\tawait sequelize.sync();",
      "\t\t\treturn sequelize;",
      "\t\t},",
      "\t},",
      "];"
    ]
  },
  "Nest Interceptor": {
    "prefix": "n-interceptor",
    "description": "NestJS Interceptor",
    "body": [
      "import { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';",
      "import { Observable } from 'rxjs';",
      "",
      "@Injectable()",
      "export class ${1}Interceptor implements NestInterceptor {",
      "\tintercept(context: ExecutionContext, stream$: Observable<any>): Observable<any> {",
      "\t\t${0}",
      "\t}",
      "}"
    ]
  },
  "Nest Guard": {
    "prefix": "n-guard",
    "description": "NestJS Guard",
    "body": [
      "import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';",
      "import { Observable } from 'rxjs';",
      "import { Reflector } from '@nestjs/core';",
      "",
      "@Injectable()",
      "export class ${1}Guard implements CanActivate {",
      "\tconstructor(private readonly reflector: Reflector) {}",
      "",
      "\tcanActivate(context: ExecutionContext):  boolean | Promise<boolean> | Observable<boolean> {",
      "\t\t${0}",
      "\t}",
      "}"
    ]
  },
  "Nest Provider": {
    "prefix": "n-provider",
    "description": "NestJS Provider",
    "body": [
      "import { Injectable } from '@nestjs/common';",
      "",
      "@Injectable()",
      "export class ${1}Service {",
      "\tconstructor() {}",
      "\t${0}",
      "}"
    ]
  },
  "Nest Module": {
    "prefix": "n-module",
    "description": "NestJS Module",
    "body": [
      "import { Module } from '@nestjs/common';",
      "import { ${1}Controller } from './${2}.controller';",
      "",
      "@Module({",
      "\tcontrollers: [${1}Controller],",
      "\tproviders: [],",
      "})",
      "export class ${1}Module {${0}};"
    ]
  },
  "Nest Global Module": {
    "prefix": "n-module-global",
    "description": "NestJS Global Module",
    "body": [
      "import { Module, Global } from '@nestjs/common';",
      "import { ${1}Controller } from './${2}.controller';",
      "",
      "@Global()",
      "@Module({",
      "\tcontrollers: [${1}Controller],",
      "\tproviders: [],",
      "})",
      "export class ${1}Module {${0}};"
    ]
  },
  "Nest Middleware": {
    "prefix": "n-middleware",
    "description": "NestJS Middleware",
    "body": [
      "import { Injectable, NestMiddleware, MiddlewareFunction } from '@nestjs/common';",
      "",
      "@Injectable()",
      "export class ${1}Middleware implements NestMiddleware {",
      "\tresolve(...args: any[]): MiddlewareFunction {",
      "\t\treturn (req, res, next) => {",
      "\t\t\t${0}",
      "\t\t\tnext();",
      "\t\t};",
      "\t}",
      "}"
    ]
  },
  "Nest Pipe": {
    "prefix": "n-pipe",
    "description": "NestJS Pipe",
    "body": [
      "import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';",
      "",
      "@Injectable()",
      "export class ${1:Validation}Pipe implements PipeTransform {",
      "  transform(value: any, metadata: ArgumentMetadata) {",
      "    return ${0:value};",
      "  }",
      "}"
    ]
  },
  "Nest TypeORM Entity": {
    "prefix": "n-typeorm-entity",
    "description": "NestJS TypeORM Entity",
    "body": [
      "import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';",
      "",
      "@Entity()",
      "export class ${1} {",
      "\t@PrimaryGeneratedColumn()",
      "\tid: number;",
      "",
      "\t@Column()",
      "\t${0}: string;",
      "}",
      ""
    ]
  },
  "Nest TypeORM Repository": {
    "prefix": "n-typeorm-repository",
    "description": "NestJS TypeORM Repository",
    "body": [
      "import { EntityRepository, Repository } from 'typeorm';",
      "import { ${1} } from '../entity/${1}';",
      "",
      "@EntityRepository(${1})",
      "export class ${1}Repository extends Repository<${1}> {",
      "\tfindByName(clientName: string) {",
      "\t\treturn this.findOne({ where: {clientName} });",
      "\t}",
      "}",
      ""
    ]
  }
}
